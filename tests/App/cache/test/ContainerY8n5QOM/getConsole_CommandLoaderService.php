<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'console.command_loader' shared service.

return $this->services['console.command_loader'] = new \Symfony\Component\Console\CommandLoader\ContainerCommandLoader(new \Symfony\Component\DependencyInjection\ServiceLocator(array('cache_clear_command' => function (): \Gnugat\MicroFrameworkBundle\Command\CacheClearCommand {
    return ($this->services['cache_clear_command'] ?? $this->load(__DIR__.'/getCacheClearCommandService.php'));
}, 'cache_warmup_command' => function (): \Gnugat\MicroFrameworkBundle\Command\CacheWarmupCommand {
    return ($this->services['cache_warmup_command'] ?? $this->load(__DIR__.'/getCacheWarmupCommandService.php'));
}, 'tests\\Gnugat\\MicroFrameworkBundle\\CustomBundle\\src\\Command\\SayHelloAwareCommand' => function (): \tests\Gnugat\MicroFrameworkBundle\CustomBundle\src\Command\SayHelloAwareCommand {
    return ($this->services['tests\Gnugat\MicroFrameworkBundle\CustomBundle\src\Command\SayHelloAwareCommand'] ?? $this->load(__DIR__.'/getSayHelloAwareCommandService.php'));
}, 'tests\\Gnugat\\MicroFrameworkBundle\\CustomBundle\\src\\Command\\SayHelloCommand' => function (): \tests\Gnugat\MicroFrameworkBundle\CustomBundle\src\Command\SayHelloCommand {
    return ($this->services['tests\Gnugat\MicroFrameworkBundle\CustomBundle\src\Command\SayHelloCommand'] ?? $this->load(__DIR__.'/getSayHelloCommandService.php'));
})), array('cache:clear' => 'cache_clear_command', 'cache:warmup' => 'cache_warmup_command', 'say-helo' => 'tests\\Gnugat\\MicroFrameworkBundle\\CustomBundle\\src\\Command\\SayHelloCommand', 'say-hello-aware' => 'tests\\Gnugat\\MicroFrameworkBundle\\CustomBundle\\src\\Command\\SayHelloAwareCommand'));
